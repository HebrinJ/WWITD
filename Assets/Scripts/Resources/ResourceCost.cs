using System;
using UnityEngine;

/// <summary>
/// Структура данных, описывающая стоимость чего-либо в игровых ресурсах.
/// Универсальный контейнер для представления цены построек, улучшений, способностей и других игровых действий.
/// Может использоваться в массивах для описания комплексной стоимости, требующей нескольких ресурсов.
/// Сериализуется для настройки в инспекторе Unity.
/// </summary>
[Serializable]
public class ResourceCost
{
    /// <summary>
    /// Тип ресурса, который требуется для операции.
    /// Определяет, какой именно ресурс будет проверяться и списываться.
    /// </summary>
    [Tooltip("Тип ресурса, который требуется затратить.")]
    public ResourceType resourceType;

    /// <summary>
    /// Количество единиц указанного ресурса, необходимое для операции.
    /// Должно быть положительным числом. Отрицательные значения могут привести к ошибкам в экономической системе.
    /// </summary>
    [Tooltip("Количество единиц ресурса, необходимое для операции. Должно быть положительным.")]
    public int amount;

    /// <summary>
    /// Конструктор для быстрого создания объекта стоимости.
    /// </summary>
    /// <param name="type">Тип ресурса.</param>
    /// <param name="cost">Количество ресурса. Должно быть положительным числом.</param>
    public ResourceCost(ResourceType type, int cost)
    {
        resourceType = type;
        amount = cost;
    }
}