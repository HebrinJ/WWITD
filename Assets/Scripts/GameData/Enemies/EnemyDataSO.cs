using UnityEngine;

/// <summary>
/// ScriptableObject содержащий все параметры и характеристики конкретного типа врага.
/// Создается через меню Assets/Create/Game Data/Enemy Data.
/// Используется системой спавна врагов <see cref="WaveManager"/> для создания юнитов с заданными характеристиками.
/// </summary>
[CreateAssetMenu(fileName = "Data_Enemy_", menuName = "Game Data/Enemy Data")]
public class EnemyDataSO : ScriptableObject
{
    /// <summary>
    /// Уникальное наименование типа врага для идентификации в системе.
    /// Соответствует ID из дизайн-документа (например: "soldier", "heavytank").
    /// </summary>
    [Tooltip("Уникальное ID врага (soldier, heavytank, etc.). Соответствует дизайн-документу.")]
    public string enemyName;

    /// <summary>
    /// Определяет базовую логику поведения юнита на карте.
    /// Влияет на выбор целей (штаб vs башни) и реакцию на атаки.
    /// </summary>
    [Tooltip("Тип поведения: агрессивный, пассивный или none.")]
    public EnemyBehaviourType enemyBehaviourType;

    /// <summary>
    /// Максимальное количество здоровья (HP) юнита.
    /// При достижении 0 юнит уничтожается.
    /// </summary>
    [Tooltip("Максимальное количество здоровья (HP).")]
    public int maxHealth;

    /// <summary>
    /// Максимальное количество брони юнита.
    /// Броня поглощает урон до своего полного истощения, после чего юнит получает урон по здоровью.
    /// Для большинства типов урона (кроме piercing) наносит 1 ед. урона броне за атаку.
    /// </summary>
    [Tooltip("Максимальное количество брони. Поглощает урон до истощения.")]
    public int maxArmor;

    /// <summary>
    /// Тип урона, который наносит юнит при атаке.
    /// Определяет модификаторы против брони и дополнительные эффекты.
    /// </summary>
    [Tooltip("Тип урона (bullet, piercing, explode, etc.).")]
    public DamageType damageType;

    /// <summary>
    /// Урон, наносимый штабу при достижении его юнитом (рукопашная атака).
    /// Наносится напрямую здоровью штаба, игнорируя его броню.
    /// Для кавалерии это основной и единственный тип урона.
    /// </summary>
    [Tooltip("Урон по штабу при достижении (игнорирует броню штаба).")]
    public int damageToBase;

    /// <summary>
    /// Урон, наносимый при стрельбе по цели (башне игрока или штабу на расстоянии).
    /// Расчет урона по цели происходит с учетом типа урона и брони цели.
    /// </summary>
    [Tooltip("Урон при атаке по цели (учитывает броню).")]
    public int damageToTarget;

    /// <summary>
    /// Базовая скорость перемещения юнита по карте (юнитов в секунду).
    /// Может динамически изменяться системой движения при образовании "пробок".
    /// </summary>
    [Tooltip("Базовая скорость перемещения (юнитов в секунду).")]
    public float moveSpeed;

    /// <summary>
    /// Скорость атаки (выстрелов в секунду).
    /// Определяет интервал между атаками юнита.
    /// </summary>
    [Tooltip("Скорострельность (выстрелов в секунду).")]
    public float fireRate;

    /// <summary>
    /// Дальность, на которой юнит может атаковать свои цели.
    /// Если цель находится в пределах этой дистанции, юнит начнет атаку.
    /// </summary>
    [Tooltip("Дальность атаки (радиус обнаружения и стрельбы по целям).")]
    public float fireDistance;

    /// <summary>
    /// Количество денег, которые получает игрок за уничтожение этого юнита.
    /// Начисляется мгновенно в <see cref="ResourceManager"/>.
    /// </summary>
    [Tooltip("Награда в деньгах за уничтожение.")]
    public int rewardMoney;

    /// <summary>
    /// Показатель опасности юнита.
    /// Используется башнями с приоритетом "по опасности" для выбора целей.
    /// Чем выше значение, тем выше приоритет цели для таких башен.
    /// </summary>
    [Tooltip("Приоритет цели для башен. Чем выше, тем опаснее юнит.")]
    public int warningRate;

    /// <summary>
    /// Префаб врага, который будет инстанцирован при спавне.
    /// Должен содержать компонент <see cref="EnemyBehaviour"/>, который использует данные из этого SO.
    /// </summary>
    [Tooltip("Префаб врага с компонентом EnemyBehaviour.")]
    public GameObject prefab;
}